def err = null
try {
// pipeline code
node ('node-name') {
stage ('first stage') {
...
} // end of last stage
}
}
catch (err) {
currentBuild.result = "FAILURE"
}
finally {
(currentBuild.result != "ABORTED"){
// Send email notifications for builds that failed
// or are unstable
mail to: 'bcl@nclasters.org',
subject: "Status of pipeline: ${currentBuild.fullDisplayName}",
body: "${env.BUILD_URL} has result ${currentBuild.result}"

emailext attachLog: true, body:
"""<p>EXECUTED: Job <b>\'${env.JOB_NAME}:${env.BUILD_NUMBER})\'
114
|
Chapter 4: Notifications and Reports</b></p><p>View console output at "<a href="${env.BUILD_URL}">
${env.JOB_NAME}:${env.BUILD_NUMBER}</a>"</p>
<p><i>(Build log is attached.)</i></p>""",
compressLog: true,
recipientProviders: [[$class: 'DevelopersRecipientProvider'],
[$class: 'RequesterRecipientProvider']],
replyTo: 'do-not-reply@company.com',
subject: "Status: ${currentBuild.result?:'SUCCESS'} -
Job \'${env.JOB_NAME}:${env.BUILD_NUMBER}\'",
to: 'bcl@nclasters.org Brent.Laster@domain.com'
}
}